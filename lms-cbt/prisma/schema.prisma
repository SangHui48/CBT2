generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Course {
  id          String       @id @default(uuid())
  userId      String
  title       String       @db.Text
  description String?      @db.Text
  imageUrl    String?      @db.Text
  price       Float?
  isPublished Boolean      @default(false)
  categoryId  String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  categroy    Category?    @relation(fields: [categoryId], references: [id])
  attachments Attachment[]

  @@index([categoryId])
}

model Category {
  id      String   @id @default(uuid())
  name    String   @unique
  courses Course[]
}

model Attachment {
  id        String   @id @default(uuid())
  name      String
  url       String   @db.Text
  courseId String   @map("coureseId")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@index([courseId])
}

// model Chapter {
//   id String @id @default(uuid())
//   title String
//   description String? @db.Text
//   videoUrl String? @db.Text
//   position Int
//   isPublished Boolean @default(false)
//   isFree Boolean @default(false)

//   muxData MuxData?

//   courseId String
//   course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

//   userProgress UserProgress[]

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model MuxData {
//   id String @id @default(uuid())
//   chapterId String @unique
//   assetId String
//   playbackId
// }